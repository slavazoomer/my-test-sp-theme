{%liquid
    assign productA = "clean-reserve-acqua-neroli,clean-reserve-skin,h2eau-discovery-gift-set,clean-reserve-warm-cotton,clean-reserve-sparkling-sugar"
    assign productB = "clean-reserve-skin,clean-reserve-warm-cotton,reserve-discovery-gift-set,clean-reserve-rain,clean-reserve-skin"
    assign productA_array = productA | split: ","
    assign productB_array = productB | split: ","
 %}

<script>
    const productDataJSON = {
        {% for productHandle in productA_array %}
          {% liquid 
            assign product = all_products[productHandle]
            assign for_loop_index = forloop.index0
            assign productB_handle = productB_array[for_loop_index]
            assign productB_product = all_products[productB_handle]
            assign variant_index = 0
            if productB_product.variants.size == 3
              assign variant_index = 1
            endif
          %}
          "{{ product.handle }}": {
            "product_handle": "{{ product.handle }}",
            "product_title": "{{ product.title }}",
            "product_b_title": "{{ productB_product.title }}",
            "product_b_handle": "{{ productB_handle }}",
            "product_b_price": "{{ productB_product.variants[variant_index].price | money }}",
            "product_b_image": "{{ productB_product.featured_image | img_url: '63x' }}",
            "product_b_option": {% for productOption in productB_product.variants[variant_index].options %}[{"option_name": '{{ productB_product.options[forloop.index0] }}','option_value': '{{ productOption }}'}{% unless forloop.last %},{% endunless %}]{% endfor %},
            "product_b_variant_id": "{{ productB_product.variants[variant_index].id }}"
          }{% unless forloop.last %}, {% endunless %}
        {% endfor %}
      }

      const optionLoop = (options) => {
        let 
      }

      const upsellTemplate = (handle, title, product_b_title, image, price, options, varId) => {
        return `<div class="cart-drawer-upsell__inner growthbook-test" data-product-a-handle="${handle}">
          <div class="cart-drawer-upsell__item" data-handle="${handle}">
            <div class="cart-drawer-upsell__item-flex-outer">
              <div class="cart-drawer-upsell__item-img">
                <img src="${image}" width="63" height="63" loading="lazy"  />
              </div>
    
              <div class="cart-drawer-upsell__item-content">
                  <div class="cart-drawer-upsell__item-flex">
                      <div class="cart-drawer-upsell__item-pairs-with">
                          <span class="all-caps">${title} pairs well with</span>
                          <span class="pairs-well-product">${product_b_title}</span>
                      </div>
                      <div class="cart-drawer-upsell__item-price">
                          ${price}
                      </div>
                  </div>
                  <div class="cart-drawer-upsell__item-flex cart-drawer-upsell__item-price-atc">
                      <div class="cart-drawer-upsell__item-pairs-with-variant">
                          ${options.map(item => {
                            return `<div>${item.option_name}: ${item.option_value}</div>`
                          })}
                      </div>
                      <div class="cart-drawer-upsell__item-atc-button">
                          <add-to-cart class="button button--small button--cta" data-variant-id="${varId}">
                              <span class="label">
                                  Add +
                              </span>
                          </add-to-cart>
                      </div>
                  </div>
              </div>
    
    
            </div>
          </div>
        </div>`
      }

    const productAArray = {{ productA_array | json }}
    const productBArray = {{ productB_array | json }}
    let productBInCart = []
    document.addEventListener('DOMContentLoaded', () => {

        document.addEventListener('cart-data:send', (event) => {
            setTimeout(() => {
              try{
                let currentCartArray = [];
                let cartItems = event.detail.items
                cartItems.forEach(item => {
                    currentCartArray.push(item.handle)
                    //check if the upsell product is in the cart add to array
                    if(productBArray.indexOf(item.handle) !== -1){
                        productBInCart.push(item.handle)
                    }
                })
                currentCartArray.forEach((item) => {
                  //check if the current cart item should have an upsell
                    if(productAArray.indexOf(item) !== -1){
                      let handle = item;
                      let currentProductA = productDataJSON[handle];
                      let title = currentProductA.product_title;
                      let product_b_handle = currentProductA.product_b_handle;
                      let product_b_title = currentProductA.product_b_title;
                      let image = currentProductA.product_b_image;
                      let price = currentProductA.product_b_price;
                      let options = currentProductA.product_b_option;
                      let varId = currentProductA.product_b_variant_id;
                      //make sure the upsell product is NOT in the array
                      if(productBInCart.indexOf(product_b_handle) === -1){
                            if(document.querySelector(`cart-items li[data-handle="${item}"]`)){
                                if(!document.querySelector(`.cart-drawer-upsell__inner[data-product-a-handle="${handle}"]`)){
                                  document.querySelector(`cart-items li[data-handle="${item}"]`).insertAdjacentHTML('beforeend', upsellTemplate(handle, title, product_b_title, image, price, options, varId))
                                }
                          }
                      }
                    }
                })
              }catch{
                console.error('The upsell end with error')
              }
            }, 800)
            
        })
    })

</script>